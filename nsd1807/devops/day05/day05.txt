CI: 持续集成
CD: 持续交付、持结部署

解释型语言：python/php/shell
编译型语言：c/java

java源码生成war包：maven/ant/gradle


jenkins
一、安装
1、准备一台虚拟机，2G内存
2、两块网卡，eth0:192.168.4.x/24，eth1: 接入互联网
3、注意：jenkins是用java语言编写的。
4、把jenkins拷贝到虚拟机
# cd jenkins/
# scp jenkins-2.138.2-1.1.noarch.rpm 192.168.4.3:/root
# rpm -ihv jenkins-2.138.2-1.1.noarch.rpm
5、启动服务
[root@node3 ~]# systemctl start jenkins
[root@node3 ~]# systemctl enable jenkins
二、配置
1、访问虚拟机的8080端口，按向导进行
2、插件安装时，只安装git和git parameter
如果安装失败，跳过。稍后安装完成后，改为使用国同镜像站点安装
https://blog.csdn.net/you227/article/details/81076032
3、进入jenkins后，修改管理员密码
三、准备git（模拟程序员开发了软件的多个版本）
1、物理主机上初始化软件项目
[root@room8pc16 tmp]# git init webapp
[root@room8pc16 tmp]# cd webapp/
[root@room8pc16 webapp]# echo '<h1>my web site</h1>' > index.html
[root@room8pc16 webapp]# git add .
[root@room8pc16 webapp]# git commit -m "web app 1.0"
[root@room8pc16 webapp]# git tag 1.0   # 把当前状态打个标记，表示1.0版本
[root@room8pc16 webapp]# echo '<h2>web app 2.0</h2>' >> index.html
[root@room8pc16 webapp]# git add .
[root@room8pc16 webapp]# git commit -m "web app 2.0"
[root@room8pc16 webapp]# git tag 2.0
[root@room8pc16 webapp]# git tag   # 查看标记
2、配置gitlab服务器
为devops组创建一个名为webapp的项目，并且进行授权
3、上传代码，采用http的方式
[root@room8pc16 webapp]# git remote rename origin old-origin
[root@room8pc16 webapp]# git remote add origin http://192.168.4.1/devops/webapp.git
[root@room8pc16 webapp]# git push -u origin --all  # 可以使用root
[root@room8pc16 webapp]# git push -u origin --tags

















