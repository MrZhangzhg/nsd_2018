实现添加主机页面
1、url
# webansi/urls.py
    url(r'^addhosts/$', views.addhosts, name='addhosts'),

2、视图函数
# webansi/views.py
def addhosts(request):
    return render(request, 'addhosts.html')

3、创建模板
# webansi/templates/addhosts.html
{% extends 'base.html' %}
{% block title %}添加主机{% endblock %}
{% block content %}
添加主机
{% endblock %}

4、修改index.html的超链接
        <a href="{% url 'addhosts' %}" target="_blank">

5、修改addhosts.html，实现表单
<div style="margin-top: 20px">
    <form action="" method="post" class="form-inline">
        {% csrf_token %}
        <div class="form-group">
            <label>主机组：</label>
            <input type="text" class="form-control" name="group">
        </div>
        <div class="form-group">
            <label>主机：</label>
            <input type="text" class="form-control" name="host">
        </div>
        <div class="form-group">
            <label>IP地址：</label>
            <input type="text" class="form-control" name="ip">
        </div>
        <div class="form-group">
            <input class="btn btn-primary" type="submit" value="提 交">
        </div>
    </form>
</div>

6、修改视图函数，将主机和组发送到前台
def addhosts(request):
    groups = HostGroup.objects.all()
    return render(request, 'addhosts.html', {'groups': groups})

7、修改addhosts.html，增加表格数据
<div class="h4">
    <table class="table table-striped table-hover">
        <tr class="info">
            <td>主机组</td>
            <td>主机</td>
        </tr>
        {% for group in groups %}
            <tr>
                <td>{{ group.groupname }}</td>
                <td>
                    <ul class="list-unstyled">
                        {% for host in group.host_set.all %}
                            <li>{{ host.hostname }}: {{ host.ipaddr }}</li>
                        {% endfor %}
                    </ul>
                </td>
            </tr>
        {% endfor %}
    </table>
</div>







