git配置
1、安装
# yum install -y git
2、填写个人信息
[root@node3 ~]# git config --list
[root@node3 ~]# git config --global user.name "Mr.Zhang"
[root@node3 ~]# git config --global user.email "zzg@163.com"
3、提交代码的时候，将会跳出文本编辑器，需要用户写入日志，指定默认的文本编辑器
[root@node3 ~]# git config --global core.editor vim
4、查看配置
[root@node3 ~]# git config --list
[root@node3 ~]# cat ~/.gitconfig

git的工作区域
工作区：程序文件所在的目录
暂存区：工作区和版本库之间的缓冲地带
版本库：将工作区的内容保存到的目录，是工作区的.git


git应用
1、创建版本库: 从0开始
# git init 项目目录
[root@node3 ~]# git init myproject
[root@node3 ~]# cd myproject/
[root@node3 myproject]# ls -a   # 有一个隐藏的.git目录
2、创建版本库：在已有目录中创建
# cd 项目目录
# git init .

3、在工作区编写程序文件
[root@node3 myproject]# echo 'Hello World' > hi.txt
4、将文件加入到暂存区
[root@node3 myproject]# git status   # 查看状态
[root@node3 myproject]# git add .    # 把当前目录所有文件加入到暂存区
5、如果有些文件是错误添加到暂存区的，可以将其撤出
[root@node3 myproject]# git rm --cache hi.txt
[root@node3 myproject]# git status
6、提交暂存区的文件到版本库
[root@node3 myproject]# git add .
[root@node3 myproject]# git commit   # 将会跳出vim，要求用户写入日志
[root@node3 myproject]# git status   # 干净的工作区

7、将新文件提交到版本库
[root@node3 myproject]# cp /etc/hosts .
[root@node3 myproject]# git status
[root@node3 myproject]# git add .
[root@node3 myproject]# git commit -m "add hosts"  # 在命令行提供日志信息
[root@node3 myproject]# git status
8、将误删除的工作区文件从版本库中检出
[root@node3 myproject]# rm -rf *   # 不会将隐藏的.git删掉
[root@node3 myproject]# git status
[root@node3 myproject]# git checkout -- *
[root@node3 myproject]# ls
hi.txt  hosts

分支管理
1、每个git项目默认的分支叫作master
[root@node3 myproject]# git branch
* master
2、如果你负责项目的一个功能，可以在某一个提交节点创建分支。注意，在创建分支的时候，
master分支应该是干净。
[root@node3 myproject]# git branch mybr1
[root@node3 myproject]# git branch
* master    # 有星号，表示当前处于master分支
  mybr1
3、在master分支提交代码
[root@node3 myproject]# cp /etc/passwd .
[root@node3 myproject]# git add .
[root@node3 myproject]# git commit -m "master-c1"
[root@node3 myproject]# git status
4、切换分支到mybr1
[root@node3 myproject]# git checkout mybr1
[root@node3 myproject]# ls   # 没有passwd文件
5、在mybr1分支编写程序
[root@node3 myproject]# echo '123456' > mytest
[root@node3 myproject]# git add .
[root@node3 myproject]# git commit -m "add mytest"
6、将mybr1分支汇入到主干
[root@node3 myproject]# git checkout master
[root@node3 myproject]# ls   # 有passwd，没有mytest
[root@node3 myproject]# git merge mybr1  # 将mybr1合并到master，将会跳出vim，要求写日志
[root@node3 myproject]# ls  # 可以查看到两个分支中全部的文件
hi.txt  hosts  mytest  passwd


gitlab服务器
1、新建一台虚拟机，内存4GB
node1.tedu.cn  192.168.4.1/24
2、安装docker
# yum install -y *.rpm
[root@node1 docker_pkgs]# systemctl start docker
[root@node1 docker_pkgs]# systemctl enable docker
3、导入gitlab镜像
# docker load < gitlab_zh.tar
4、启动容器














