OOP:面向对象的编程

鸟：name, 颜色，飞，进食

bird = {'name': '神雕', 'color': '棕'}

def fly():

def eat():

Class Bird:
    name =
    color =

    def fly():

    def eat():

b1 = Bird(name=, color=)
b1.fly()
b2.eat()



组合：两个类明显不同，但是一个类是另一个类的组件
继承：子类可以继承父类的属性和方法


magic：魔法方法，指的是那些__xxxx__这样的方法


将mac地址改为通过冒号分开的样式
192.168.1.1     000C29123456
192.168.1.3     525400A9B321
192.168.1.10    525400243D4A
思路：
1、先匹配到mac地址: 出现在结尾的12个任意字符
2、将mac地址分成6组: 每两个字符用括号()分组
3、在6组之间加上冒号: 替换时，\1表示第1个分组，\n表示第n个分组
:%s/\(..\)\(..\)\(..\)\(..\)\(..\)\(..\)$/\1:\2:\3:\4:\5:\6/

https://jex.im/regulex

\<tom\> 匹配独立单词tom，如果是tommorrow就不能匹配了











