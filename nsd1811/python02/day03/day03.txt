5!=5x4x3x2x1

5!=5x4!
5!=5x4x3!
5!=5x4x3x2!
5!=5x4x3x2x1!

快速排序：
nums = [32, 19, 68, 69, 10, 46, 21, 71, 88, 76]
1、假定第一个值是中间值
>>> middle = nums[0]
2、依次取出剩余数据，比middle小的放到一个列表中，比它大的放到另一个列表中
>>> smaller = [19, 10, 21]
>>> larger = [68, 69, 46, 71, 88, 76]
3、将smaller、middle、larger拼接起来
>>> smaller + [middle] + larger
4、采用相同的方法对smaller和larger继续进行排序
5、如果列表长度为0或1就不用排序了，直接将它返回即可



生成器：生成器本质上是一个函数。常规函数就算存在多个return，也只能return一次；但
是生成器，可以用yield生成并返回很多中间结果。
>>> def my_gen():
...     yield 'hello world'
...     num = 10 + 5
...     yield num
...     yield 100
>>> a = my_gen()
>>> a.__next__()
'hello world'
>>> a.__next__()
15
>>> a.__next__()
100
>>> a.__next__()   # 生成器取值完成后，再取值将会发生异常
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
StopIteration
>>> mg = my_gen()
>>> for item in mg:
...     print(item)


1、模块导入的时候，将会在sys.path定义的位置下搜索模块
>>> sys.path
['', '/usr/local/lib/python36.zip', '/usr/local/lib/python3.6', '/usr/local/lib/python3.6/lib-dynload', '/usr/local/lib/python3.6/site-packages']
说明，''空字符串表示当前目录
2、如果希望自己编写的模块也能在任意位置被导入：
(1) 把模块文件拷贝到site-packages/目录下
(2) 使用PYTHONPATH环境变量定义
[root@room8pc16 tmp]# export PYTHONPATH=/var/ftp/nsd_2018/nsd1811/python02/day03




