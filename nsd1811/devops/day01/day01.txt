字典转列表：
>>> adict = {'172.40.58.150': 10, '172.40.58.124': 6, '172.40.58.101': 10, '127.0.0.1': 121, '192.168.4.254': 103, '192.168.2.254': 110, '201.1.1.254': 173, '201.1.2.254': 119, '172.40.0.54': 391, '172.40.50.116': 244}
>>> list(adict.items())
>>> [(key, val) for key, val in adict.items()]


>>> from collections import Counter
>>> c = Counter()  # 自动记录数据出现的次数
>>> c.update(['192.168.1.1'])
>>> c.update(['192.168.1.1'])
>>> c.update(['192.168.1.1'])
>>> c.update(['192.168.1.2'])
>>> c.update(['192.168.1.2'])
>>> c.update(['192.168.1.2'])
>>> c.update(['192.168.1.2'])
>>> c
Counter({'192.168.1.2': 4, '192.168.1.1': 3})
>>> c.update(['1.1.1.1'])
>>> c.update(['1.1.1.2'])
>>> c.update(['1.1.1.3'])
>>> c.update(['1.1.1.4'])
>>> c.update(['1.1.1.5'])
>>> c.update(['1.1.1.5'])
>>> c.most_common(3)   # 得到出现次数最多的前3项


字符有str类型和bytes类型，它们之间的转换：
>>> s1 = '您好'
>>> type(s1)
<class 'str'>
>>> s1.encode()
b'\xe6\x82\xa8\xe5\xa5\xbd'
>>> b1 = s1.encode()
>>> b1
b'\xe6\x82\xa8\xe5\xa5\xbd'
>>> b1.decode()
'您好'


端口号：
<254 : well-known 众所周知的端口号
<1024 : 保留给unix应用
>1024 : 自定义


执行脚本：
[root@room8pc16 day01]# cat chdir.sh
#!/bin/bash

cd /home
1、# bash chdir.sh  # 不会切换目录，因为是fork执行
2、# ./chdir.sh   # 不会切换目录，因为是fork执行
3、# source chdir.sh   # 切换目录，因为在当前进程执行


fork: 叉子、分叉的意思
linux系统运行程序、命令时，如果是fork执行，父进程将会产生子进程，指令在子进程中执行
子进程执行完毕后将会销毁，回到父进程。


fork编程思路：
1、考虑清楚，父子进程分别做什么工作
2、一般来说，父进程只产生子进程
3、子进程负责做具体的工作，完成后要退出












