备份：
1、文件名：文件名_完全/增量_日期.tar.gz
security_full_20190220.tar.gz
security_incr_20190221.tar.gz
2、获取每个文件
>>> info = list(os.walk('/tmp/mydemo/security'))
>>> import pprint
>>> pprint.pprint(info)
>>> pprint.pprint(info)
[('/tmp/mydemo/security',
  ['console.apps', 'console.perms.d', 'limits.d', 'namespace.d'],
  ['access.conf',
   'chroot.conf',
   'console.handlers',
   'console.perms',
   'group.conf',
   'limits.conf',
   'namespace.conf',
   'namespace.init',
   'opasswd',
   'pam_env.conf',
   'sepermit.conf',
   'time.conf',
   'pwquality.conf']),
 ('/tmp/mydemo/security/console.apps',
  [],
  ['config-util', 'xserver', 'liveinst', 'setup']),
 ('/tmp/mydemo/security/console.perms.d', [], []),
 ('/tmp/mydemo/security/limits.d', [], ['20-nproc.conf']),
 ('/tmp/mydemo/security/namespace.d', [], [])]
经过分析，os.walk返回的值由元组构成，每个元素有三项，第一项是路径字符串，第二
项是目录列表，第三项是文件列表
>>> src
'/tmp/mydemo/security/'
>>> for path, folder, files in os.walk(src):
...     for file in files:
...         os.path.join(path, file)


OOP：面向对象的编程
将数据和行为进行融合。可以先创建一个蓝图，然后再根据蓝图创建具体的实例。

OOP编程时，有一些以__开头、结尾的方法，被称作magic魔法方法。


正则
192.168.1.1     000C29123456
192.168.1.2     525400AB3C29
172.40.50.116   408d5cdcee82
把mac地址改成以冒号分隔的形式
1、定位到mac地址      =>结尾、12个任意字符
2、每两个数字分一组    =>括号分组
3、在组之间加冒号      => 替换
:%s/\(..\)\(..\)\(..\)\(..\)\(..\)\(..\)$/\1:\2:\3:\4:\5:\6/


re模块
>>> import re
>>> re.match('f..', 'food')  # 如果匹配到模式，返回匹配对象
>>> print(re.match('f..', 'seafood'))   # 没匹配到返回None
>>> m = re.match('f..', 'food')
>>> m.group()   # 通过group方法获取匹配结果
>>> m = re.search('f..', 'seafood')
>>> m.group()

>>> re.findall('f..', 'seafood is food')
>>> re.finditer( 'f..', 'seafood is food')
>>> list(re.finditer( 'f..', 'seafood is food'))
finditer将匹配到的所有匹配对象组成一个匹配列表
>>> for m in re.finditer('f..', 'seafood is food'):
...     m.group()

>>> re.split('\.|-', 'hello-world.tar.gz')  # 以点和-作为分隔符切分
>>> re.sub('x', 'zs', 'Hi x. nice to meet you, x.')  # 把x替换为zs

如果匹配的数量非常大，可以把模式先编译，以提升效率
>>> patt = re.compile('f..')
>>> m = patt.search('seafood')
>>> m.group()
>>> patt.findall('seafood is food')

















