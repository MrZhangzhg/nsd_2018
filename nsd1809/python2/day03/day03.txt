偏函数：相当于是改造现有函数，将一些参数固定下来后，生成新的函数
>>> def add(a, b, c, d, e):
...     return a + b + c + d + e
函数接受5个参数，但是大多数情况下，调用函数，前4个参数是固定的
>>> add(10, 20, 30, 40, 5)
>>> add(10, 20, 30, 40, 8)
可以改造add函数，将前4个参数固定，生成的新函数取名为myadd
>>> from functools import parial
>>> myadd = partial(add, 10, 20, 30, 40)
>>> myadd(5)
>>> myadd(8)


递归函数：函数体内又包含对自身的调用
比如数字的阶乘：
5!=5x4x3x2x1
5!=5x4!
5!=5x4x3!
5!=5x4x3x2!
5!=5x4x3x2x1!
1!=1


生成器：本质上是一个函数。常规的函数只能返回一个最终结果，但是生成器可以通过
yield语句，返回很多中间结果。
>>> def mygen():
...     yield 'hello world'
...     a = 10 + 20
...     yield a
...     yield [1, 2, 3]
>>> a = mygen()
>>> a.__next__()
>>> b = mygen()
>>> for item in b:
...     print(item)














