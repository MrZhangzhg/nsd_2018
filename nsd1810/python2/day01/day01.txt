字典：属于容器、可变、映射类型
>>> adict = {'name': 'tom', 'age': 20}
>>> bdict = dict(['ab', ('name', 'jerry'), ['age', '20']])
dict参数是个列表，列表中有三个元素，每个元素的长度为2，元素第一项为key，第二项为val
>>> cdict = {}.fromkeys(['bob', 'alice', 'kenji'], 7)

>>> for key in adict:
...     print('%s: %s' % (key, adict[key]))

>>> '%(name)s: %(age)s' % adict

# 通过key赋值，key在字典中是修改，不在字典中则增加
>>> adict['age'] = 22
>>> adict['email'] = 'tom@qq.com'

字典的key只能是不可变类型的数据，如数字、字符串、元组

>>> print(adict.get('phone'))   # 在字典中取得key为phone的值，没有默认返回None
None
>>> adict.get('phone', '114')  # 如果没有phone这个key，返回指定值
>>> adict.get('name', 'zhangsan')  # 字典有name，对就是tom，所以返回tom

>>> adict.keys()   # 获取所有的key
>>> for key in adict.keys():
...     print(key)
>>> for key in adict:  # 与上面的等价
...     print(key)

>>> adict.values()   # 取得所有的值，也可以用for遍历
>>> adict.items()    # 取得键-值对
>>> for key, val in adict.items():
...     print(key, val)

>>> adict.popitem()   # 随机弹出键值对
>>> adict.pop('age')   # 弹出key='age'的元素
22
>>> adict.update({'age': 20, 'phone': '15011223344'})  # 更新字典


\r表示回车不换行
####################
@###################
#@##################
##@#################



集合：由不同不可变元素构成，相当于是无值的字典。
>>> aset = set('abc')
>>> cset = set(['hello', 'world'])
>>> bset = set('bcd')
>>> len(aset)
>>> for ch in aset:
...     print(ch)
>>> aset | bset   # 并集 {'c', 'd', 'a', 'b'}
>>> aset & bset   # 交集 {'c', 'b'}
>>> aset - bset   # 差补 {'a'}   aset中有，bset没有

# 将列表中重复的数字去除
>>> from random import randint
>>> alist = [randint(1,50) for i in range(20)]
>>> list(set(alist))













