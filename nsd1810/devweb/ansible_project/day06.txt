编写添加模块页面
1、URL
    url(r'^addmodules/$', views.addmodules, name='addmodules'),
2、修改index.html，添加超链接
<a href="{% url 'addmodules' %}" target="_blank">
    <img width="150px" src="{% static 'imgs/linux.jpg' %}"><br>
    添加模块
</a>
3、创建视图函数
from .models import HostGroup, Module

def addmodules(request):
    if request.method == 'POST':
        module_name = request.POST.get('module').strip()
        args_text = request.POST.get('params').strip()
        if module_name:
            module = Module.objects.get_or_create(module_name=module_name)[0]
            if args_text:
                module.argument_set.get_or_create(args_text=args_text)

    modules = Module.objects.all()
    return render(request, 'addmodules.html', {'modules': modules})
4、创建模板addmodules.html
{% extends 'base.html' %}
{% load static %}
{% block title %}添加模板{% endblock %}
{% block content %}
    <form action="" method="post" class="form-inline">
    {% csrf_token %}
        <div class="form-group">
            <label>模块：</label>
            <input type="text" class="form-control" name="module">
        </div>
        <div class="form-group">
            <label>参数：</label>
            <input type="text" class="form-control" name="params">
        </div>
        <div class="form-group">
            <input class="btn btn-primary" type="submit" value="添 加">
        </div>
    </form>
    <hr>
    <table class="table table-bordered table-hover table-striped">
        <tr class="info">
            <td>模块</td>
            <td>参数</td>
        </tr>
        {% for module in modules %}
            <tr>
                <td>{{ module.module_name }}</td>
                <td>
                    <ul class="list-unstyled">
                        {% for args in module.argument_set.all %}
                            <li>{{ args.args_text }}</li>
                        {% endfor %}
                    </ul>
                </td>
            </tr>
        {% endfor %}
    </table>
{% endblock %}



编写执行任务
1、URL
    url(r'^tasks/$', views.tasks, name='tasks'),
2、修改index.html的超链接
<a href="{% url 'tasks' %}" target="_blank">
    <img width="150px" src="{% static 'imgs/linux.jpg' %}"><br>
    执行任务
</a>
3、编写视图函数
def tasks(request):
    groups = HostGroup.objects.all()
    modules = Module.objects.all()
    hosts = Host.objects.all()
    context = {'groups': groups, 'modules': modules, 'hosts': hosts}

    return render(request, 'tasks.html', context)
4、创建模板文件tasks.html
{% extends 'base.html' %}
{% load static %}
{% block title %}执行任务{% endblock %}
{% block content %}
    <ul class="nav nav-tabs">
        <li class="active"><a href="#server" data-toggle="tab">主机</a></li>
        <li><a href="#servergroup" data-toggle="tab">主机组</a></li>
    </ul>
    <form action="" method="post">
    {% csrf_token %}
        <div class="tab-content form-group" style="margin-top: 10px">
            <div class="tab-pane active in fade" id="server">
                <select name="host" class="form-control">
                    <option value="">无</option>
                    {% for host in hosts %}
                        <option value="{{ host.ipaddr }}">{{ host.hostname }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="tab-pane fade" id="servergroup">
                <select name="group" class="form-control">
                    <option value="">无</option>
                    {% for group in groups %}
                        <option value="{{ group.group_name }}">{{ group.group_name }}</option>
                    {% endfor %}
                </select>
            </div>
        </div>
        <div class="form-group">
            <table class="table table-hover table-striped">
                <tr class="info">
                    <td>模块</td>
                    <td>参数</td>
                </tr>
                {% for module in modules %}
                    <tr>
                        <td>
                            <label>
                                <input type="radio" name="module" value="{{ module.module_name }}">
                                {{ module.module_name }}
                            </label>
                        </td>
                        <td>
                            {% for args in module.argument_set.all %}
                                <div class="radio">
                                    <label>
                                        <input type="radio" name="params" value="{{ args.args_text }}">
                                        {{ args.args_text }}
                                    </label>
                                </div>
                            {% endfor %}
                        </td>
                    </tr>
                {% endfor %}
            </table>
        </div>
        <div class="form-group text-center">
            <input class="btn btn-primary" type="submit" value="执 行">
        </div>
    </form>
{% endblock %}




为参数添加删除功能
1、url
    url(r'^delargs/(?P<args_id>\d+)/$', views.delargs, name='delargs'),
2、在addmodules.html中添加删除超链接
<ul class="list-unstyled">
    {% for args in module.argument_set.all %}
        <li>
            <div class="col-md-9">
                {{ args.args_text }}
            </div>
            <div class="col-md-3 text-right">
                <a href="{% url 'delargs' args_id=args.id %}">删除</a>
            </div>
        </li>
    {% endfor %}
</ul>
3、创建视图函数
from django.shortcuts import render, redirect
from .models import HostGroup, Module, Host, Argument
def delargs(request, args_id):
    argument = Argument.objects.get(id=args_id)
    argument.delete()
    return redirect('addmodules')








