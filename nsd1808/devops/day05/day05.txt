CI/CD：持续集成、持续交付(部署)

配置JENKINS环境
1、启动gitlab服务器      192.168.4.1
2、配置jenkins          eth0:192.168.4.3   eth1连接default
[root@node3 ~]# ifconfig virbr0 down
[root@node3 ~]# brctl delbr virbr0
3、安装
将jenkins/目录下的RPM包拷贝到192.168.4.3上安装
[root@node3 ~]# rpm -ihv jenkins-2.138.2-1.1.noarch.rpm
[root@node3 ~]# systemctl start jenkins
4、配置
通过浏览器访问http://192.168.4.3:8080/
安装插件时，选择自定义，不安装任何插件

5、通过镜像站点安装插件
https://blog.csdn.net/you227/article/details/81076032
把插件地址改为清华大学的镜像站点地址
在“可选插件”中找到“git parameter”，直接安装


模拟开发部开发软件
[root@room8pc16 jenkins]# git init /tmp/myweb
[root@room8pc16 jenkins]# cd /tmp/myweb
[root@room8pc16 myweb]# echo '<h1>my web site</h1>' > index.html
[root@room8pc16 myweb]# git add .
[root@room8pc16 myweb]# git commit -m "myweb site init"
[root@room8pc16 myweb]# git tag 1.0   # 把当前状态标记为1.0版本
[root@room8pc16 myweb]# echo '<h2>new line</h2>' >> index.html
[root@room8pc16 myweb]# git add .
[root@room8pc16 myweb]# git commit -m "mysite version 2.0"
[root@room8pc16 myweb]# git tag 2.0    # 把当前状态标记为2.0版本
[root@room8pc16 myweb]# git tag        # 查看所有的版本

[root@room8pc16 myweb]# cat index.html
<h1>my web site</h1>
<h2>new line</h2>
[root@room8pc16 myweb]# git checkout 1.0
[root@room8pc16 myweb]# cat index.html
<h1>my web site</h1>
[root@room8pc16 myweb]# git checkout master
[root@room8pc16 myweb]# cat index.html
<h1>my web site</h1>
<h2>new line</h2>














