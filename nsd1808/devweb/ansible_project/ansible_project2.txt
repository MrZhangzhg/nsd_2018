编写“添加主机”页面
1、 URL
    url(r'^addhosts/$', views.addhosts, name='addhosts'),

2、视图函数和模板
(1) 添加主机页面有两个功能，一个是显示所有的主机和组的信息，另一个是创建
(2) 先实现显示功能
from .models import HostGroup
def addhosts(request):
    groups = HostGroup.objects.all()
    return render(request, 'addhosts.html', {'groups': groups})
(3)模板文件
# webansi/templates/addhosts.html
{% extends 'base.html' %}
{% load static %}
{% block title %}添加主机/组{% endblock %}
{% block content %}
    {{ groups }}
{% endblock %}
(4) 修改主页的超链接
            <a href="{% url 'addhosts' %}" target="_blank">
(5) 进一步修改模板文件
{% block content %}
    <div>
        <table>
            <tr>
                <td>主机组</td>
                <td>主机</td>
            </tr>
            {% for group in groups %}
                <tr>
                    <td>{{ group.group_name }}</td>
                    <td>
                        <ul>
                            {% for host in group.host_set.all %}
                                <li>{{ host.hostname }}=>{{ host.ipaddr }}</li>
                            {% endfor %}
                        </ul>
                    </td>
                </tr>
            {% endfor %}
        </table>
    </div>
{% endblock %}

(6) 为表格加样式
<table class="table table-bordered table-hover">
            <tr class="info">
                <td>主机组</td>
                <td>主机</td>
            </tr>
            ... ...
                        <ul class="list-unstyled">
(7) 在模板中添加表单功能
在表格DIV的上方，加入以下内容
<div>
    <form action="" method="post" class="form-inline">
        <div class="form-group">
            <label>主机名：</label>
            <input type="text" class="form-control" name="host">
        </div>
        <div class="form-group">
            <label>ip地址：</label>
            <input type="text" class="form-control" name="ip">
        </div>
        <div class="form-group">
            <label>主机组：</label>
            <input type="text" class="form-control" name="group">
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-primary" value="提 交">
        </div>
    </form>
</div>
<hr>
说明：action没有写网址，是个空串，表示提交数据的时候，提交给自己

(8) 完善addhosts函数，处理表单提交的数据
def addhosts(request):
    if request.method == 'POST':
        host = request.POST.get('host').strip()
        ip = request.POST.get('ip').strip()
        group = request.POST.get('group').strip()
        if group:   # 如果组不为空
            # get_or_create返回元组(实例, True|False)
            hostgroup = HostGroup.objects.get_or_create(group_name=group)[0]
            if host and ip:  # 如果host和ip都不为空
                hostgroup.host_set.get_or_create(hostname=host, ipaddr=ip)

    groups = HostGroup.objects.all()
    return render(request, 'addhosts.html', {'groups': groups})

(9) 由于安全功能打开，所以模板的表单中form语句下面加入这个语句
            <form> ....
            {% csrf_token %}

编写添加模块功能
1、URL
    url(r'^addmodules/$', views.addmodules, name='addmodules'),
2、创建视图函数
from .models import HostGroup, Module
def addmodules(request):
    modules = Module.objects.all()
    return render(request, 'addmodules.html', {'modules': modules})
3、模板
# webansi/templates/addmodules.html
{% extends 'base.html' %}
{% load static %}
{% block title %}添加模块/参数{% endblock %}
{% block content %}
    <div>
        <form action="" method="post" class="form-inline">
            {% csrf_token %}
            <div class="form-group">
                <label>模块：</label>
                <input type="text" class="form-control" name="module">
            </div>
            <div class="form-group">
                <label>参数：</label>
                <input type="text" class="form-control" name="arg">
            </div>
            <div class="form-group">
                <input type="submit" class="btn btn-primary" value="提 交">
            </div>
        </form>
    </div>
    <hr>
    <div>
        <table class="table table-bordered table-hover">
            <tr class="info">
                <td>模块</td>
                <td>参数</td>
            </tr>
            {% for module in modules %}
                <tr>
                    <td>{{ module.module_name }}</td>
                    <td>
                        <ul class="list-unstyled">
                            {% for argument in module.argument_set.all %}
                                <li>{{ argument.argument_text }}</li>
                            {% endfor %}
                        </ul>
                    </td>
                </tr>
            {% endfor %}
        </table>
    </div>
{% endblock %}
4、修改首页的超链接
            <a href="{% url 'addmodules' %}" target="_blank">
5、完善视图函数，实现添加模块功能
def addmodules(request):
    if request.method == 'POST':
        module = request.POST.get('module').strip()
        arg = request.POST.get('arg').strip()
        if module:
            mod = Module.objects.get_or_create(module_name=module)[0]
            if arg:
                mod.argument_set.get_or_create(argument_text=arg)

    modules = Module.objects.all()
    return render(request, 'addmodules.html', {'modules': modules})


为模块参数添加删除功能
1、URL
    url(r'^del/(?P<arg_id>\d+)/$', views.delarg, name='delarg'),
2、创建视图函数
def delarg(request, arg_id):
    argument = Argument.objects.get(id=arg_id)
    argument.delete()
    return redirect('addmodules')
3、修改addmodules.html，增加删除按钮
{% for module in modules %}
    <tr>
        <td>{{ module.module_name }}</td>
        <td>
            <ul class="list-unstyled">
                {% for argument in module.argument_set.all %}
                    <li>
                        <div class="col-md-9">{{ argument.argument_text }}</div>
                        <div class="col-md-3"><a href="{% url 'delarg' arg_id=argument.id %}">删除</a></div>
                    </li>
                {% endfor %}
            </ul>
        </td>
    </tr>
{% endfor %}












